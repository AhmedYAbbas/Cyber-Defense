using Photon.Pun;
using UnityEngine;

public class MalwareProjectile : PoolableObject
{
    private Transform _target;
    private Vector3 _targetDir;
    private int _damage ;
    [SerializeField] float projectileSpeed;

    

    public void GetTarget(Transform target,int dmg)
    {
        _target = target;
        _damage = dmg;
    }

    private void Update()
    {
       
        if (_target != null &&_target.gameObject.activeInHierarchy )
        {
            _targetDir = (_target.position - transform.position).normalized;
            transform.position += _targetDir * (projectileSpeed * Time.deltaTime);
        }
        else
        {
            //Destroy(gameObject);
            gameObject.SetActive(false);
        }
    }

    private void OnTriggerEnter(Collider other)
    {
        if (other.CompareTag("Tower") && _target.gameObject.activeInHierarchy)
        {
            
            var towerScript = other.GetComponent<Tower>();
            if (towerScript.photonView.IsMine)
            {
                towerScript.DamageTower(_damage);
                
            }
            gameObject.SetActive(false);
        }
        else if (other.CompareTag("Base") && _target.gameObject.activeInHierarchy)
        {
            var baseScript = other.GetComponent<Base>();
            if (PhotonNetwork.IsMasterClient)
            {
                baseScript.TakeDamage(_damage);
                
            }
            gameObject.SetActive(false);
        }
        else
        {
            //gameObject.SetActive(false);
        }
    }
}
