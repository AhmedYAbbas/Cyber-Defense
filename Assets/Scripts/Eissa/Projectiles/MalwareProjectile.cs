using Photon.Pun;
using UnityEngine;

public class MalwareProjectile : PoolableObject
{
    private Transform _target;
    private Vector3 _targetDir;
    
    private int _damage ;
    [SerializeField] private float projectileSpeed;
    public void GetTarget(Transform target,int dmg)
    {
        _target = target;
        _damage = dmg;
        _targetDir = (_target.position - transform.position).normalized;
    }

    private void Update()
    {
        if (_target != null)
        {
            transform.position += _targetDir * (projectileSpeed * Time.deltaTime);
        }
        else
        {
            gameObject.SetActive(false);
        }
    }

    private void OnTriggerEnter(Collider other)
    {
        if (other.CompareTag("Tower"))
        {
            var towerScript = other.GetComponent<Tower>();
            if (towerScript.photonView.IsMine)
            {
                towerScript.DamageTower(_damage);
            }
            gameObject.SetActive(false);
        }
        else if (other.CompareTag("Base"))
        {
            var baseScript = other.GetComponent<Base>();
            if (PhotonNetwork.IsMasterClient)
            {
                baseScript.TakeDamage(_damage);
            }
            gameObject.SetActive(false);
        }
    }
}
